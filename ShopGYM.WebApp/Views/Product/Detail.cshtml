@using ShopGYM.ViewModels.Common
@model ProductDetailViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .product-image {
        width: 400px; /* Kích thước khung cố định */
        height: 400px; /* Kích thước khung cố định */
        object-fit: contain; /* Giữ tỷ lệ ảnh, vừa khung */
        border: 1px solid #ddd; /* Thêm viền để dễ thấy khung */
        border-radius: 5px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        cursor: pointer;
        opacity: 0.6;
        transition: opacity 0.3s ease;
    }

        .thumbnail:hover, .thumbnail.active {
            opacity: 1;
        }
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<!-- inner page section -->
<section class="inner_page_head">
    <div class="container_fuild">
        <div class="row">
            <div class="col-md-12">
                <div class="full">
                    <h3>Chi tiết sản phẩm</h3>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- end inner page section -->

<div class="container mt-5">
    <div class="row">
        <!-- Product Images -->
        <div class="col-md-6 mb-4">
            @{
                // Lấy ảnh chính (ưu tiên ảnh có IsDefault == true, nếu không thì lấy ảnh đầu tiên từ HinhAnhs)
                var mainImage = Model.ProductImages?.FirstOrDefault(img => img.IsDefault)?.DuongDan
                ?? Model.Product.HinhAnhs?.FirstOrDefault()
                ?? "no-image.jpg";
            }
            <img src="@(Configuration["BaseAddress"] + mainImage)" alt="@Model.Product.TenSanPham" class="img-fluid rounded mb-3 product-image" id="mainImage">
            <div class="d-flex justify-content-between">
                @{
                    // Sử dụng ProductImages nếu có, nếu không thì dùng HinhAnhs
                    var images = Model.ProductImages?.Any() == true
                    ? Model.ProductImages.Select(img => img.DuongDan).ToList()
                    : Model.Product.HinhAnhs ?? new List<string>();
                    var firstImage = true;
                }
                @foreach (var image in images)
                {
                    <img src="@(Configuration["BaseAddress"] + image)" alt="Thumbnail" class="thumbnail rounded @(firstImage ? "active" : "")" onclick="changeImage(event, '@(Configuration["BaseAddress"] + image)')">
                    firstImage = false; // Đặt active cho ảnh đầu tiên
                }
            </div>
        </div>

        <!-- Product Details -->
        <div class="col-md-6">
            <h2 class="mb-3">@Model.Product.TenSanPham</h2>
            <div class="mb-3">
                <span class="h4 me-2">@Model.Product.Gia.ToString("N0") VNĐ</span>
            </div>
            <div class="mb-4">
                <p><strong>Danh mục:</strong> @(Model.Product.Category != null && Model.Product.Category.Any() ? string.Join(", ", Model.Product.Category) : "Không có danh mục")</p>
            </div>
            <p class="mb-4">
                @(string.IsNullOrEmpty(Model.Product.MoTa) ? "Không có mô tả" : Model.Product.MoTa)
            </p>
            <div class="mb-4">
                <h5>Màu sắc:</h5>
                <div class="btn-group" role="group" aria-label="Color selection">
                    @{
                        var colors = string.IsNullOrEmpty(Model.Product.MauSac) ? new List<string> { "Không có màu sắc" } : Model.Product.MauSac.Split(',').Select(c => c.Trim()).ToList();
                        var firstColor = true;
                    }
                    @foreach (var color in colors)
                    {
                        <input type="radio" class="btn-check" name="color" id="@color.ToLower()" autocomplete="off" @(firstColor ? "checked" : "")>
                        <label class="btn btn-outline-dark" for="@color.ToLower()">@color</label>
                        firstColor = false;
                    }
                </div>
            </div>
            <div class="mb-4">
                <h5>Kích thước:</h5>
                <p>@(string.IsNullOrEmpty(Model.Product.KichThuoc) ? "Không có kích thước" : Model.Product.KichThuoc)</p>
            </div>
            <div class="mb-4">
                <label for="quantity" class="form-label">Số lượng tồn: @Model.Product.SoLuongTon</label>
                <input type="number" class="form-control" id="quantity" value="1" min="1" max="@Model.Product.SoLuongTon" style="width: 80px;">
            </div>
            <button class="btn btn-primary btn-lg mb-3 me-2">
                <i class="bi bi-cart-plus"></i> Thêm vào giỏ hàng
            </button>
            <button class="btn btn-outline-secondary btn-lg mb-3">
                <i class="bi bi-heart"></i> Thêm vào yêu thích
            </button>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script>
    function changeImage(event, src) {
        document.getElementById('mainImage').src = src;
        document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
        event.target.classList.add('active');
    }
</script>